name: Wheels Deploy

on:
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  build-wheels:
    name: Build cp${{matrix.python}}-${{ matrix.platform_id }}
    runs-on: ${{ matrix.os }}
    continue-on-error: false

    strategy:
      fail-fast: false
      matrix:
        include:
        - { os: macos-latest, python: 310, platform_id: macosx_universal2, cibw_archs: universal2 }
        - { os: macos-latest, python: 311, platform_id: macosx_universal2, cibw_archs: universal2 }
        - { os: macos-latest, python: 312, platform_id: macosx_universal2, cibw_archs: universal2 }
        - { os: windows-latest, python: 310, platform_id: win_amd64, cibw_archs: AMD64 }
        - { os: windows-latest, python: 311, platform_id: win_amd64, cibw_archs: AMD64 }
        - { os: windows-latest, python: 312, platform_id: win_amd64, cibw_archs: AMD64 }
        - { os: windows-latest, python: 310, platform_id: win_arm64, cibw_archs: ARM64 }
        - { os: windows-latest, python: 311, platform_id: win_arm64, cibw_archs: ARM64 }
        - { os: windows-latest, python: 312, platform_id: win_arm64, cibw_archs: ARM64 }
        - { os: ubuntu-latest, python: 310, platform_id: manylinux_x86_64, cibw_archs: x86_64 }
        - { os: ubuntu-latest, python: 311, platform_id: manylinux_x86_64, cibw_archs: x86_64 }
        - { os: ubuntu-latest, python: 312, platform_id: manylinux_x86_64, cibw_archs: x86_64 }
        - { os: ubuntu-latest, python: 310, platform_id: manylinux_aarch64, cibw_archs: aarch64 }
        - { os: ubuntu-latest, python: 311, platform_id: manylinux_aarch64, cibw_archs: aarch64 }
        - { os: ubuntu-latest, python: 312, platform_id: manylinux_aarch64, cibw_archs: aarch64 }

    steps:
      - name: Checkout the repository
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Set up QEMU
        if: matrix.cibw_archs == 'aarch64'
        uses: docker/setup-qemu-action@v3
        with:
          platforms: arm64

      - name: Setup and install python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.16.5
        env:
          CIBW_ARCHS: ${{matrix.cibw_archs}}
          CIBW_BUILD: cp${{ matrix.python }}-${{ matrix.platform_id }}
          CIBW_TEST_SKIP: "*-manylinux_aarch64 *-macosx_universal2:arm64 *-win_arm64"
          CIBW_ENVIRONMENT: POPSICLE_LTO=1

      - name: Upload all the dists
        uses: actions/upload-artifact@v3
        with:
          name: python-package-distributions
          path: ./wheelhouse/*.whl

  upload-test-pypi:
    name: Publish Wheels To Test PyPI
    needs: [build-wheels]
    runs-on: ubuntu-latest
    permissions:
      id-token: write

    steps:
      - name: Download all the dists
        uses: actions/download-artifact@v4
        with:
          name: python-package-distributions
          path: dist/
          merge-multiple: true

      - name: Publish distribution to Test PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: https://test.pypi.org/legacy/

  upload-pypi:
    name: Publish Wheels To PyPI
    needs: [upload-test-pypi]
    runs-on: ubuntu-latest
    permissions:
      id-token: write

    steps:
      - name: Download all the dists
        uses: actions/download-artifact@v4
        with:
          name: python-package-distributions
          path: dist/
          merge-multiple: true

      - name: Publish distribution to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1

  github-release:
    name: Sign And Upload Github Release
    needs: [upload-pypi]
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write

    steps:
      - name: Download all the dists
        uses: actions/download-artifact@v4
        with:
          name: python-package-distributions
          path: dist/
          merge-multiple: true

      - name: Sign the dists with Sigstore
        uses: sigstore/gh-action-sigstore-python@v1.2.3
        with:
          inputs: ./dist/*.whl

      - name: Create GitHub Release
        env:
          GITHUB_TOKEN: ${{ github.token }}
        run: gh release create '${{ github.ref_name }}' --repo '${{ github.repository }}' --notes ""

      - name: Upload artifact signatures to GitHub Release
        env:
          GITHUB_TOKEN: ${{ github.token }}
        run: gh release upload '${{ github.ref_name }}' dist/** --repo '${{ github.repository }}'
