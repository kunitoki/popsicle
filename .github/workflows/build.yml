name: Build Wheels

on:
  push

env:
  BUILD_TYPE: Release

jobs:
  linux_build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.6, 3.7, 3.8]
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - name: Set up *nix dependencies
      run: |
        sudo apt-get install zlib1g-dev libpng-dev libcurl3-dev libcurl4-openssl-dev libssl-dev libasound2-dev libfreetype6-dev libxcomposite-dev libxcursor-dev libxinerama-dev libxrandr-dev libxrender-dev libx11-dev x11proto-randr-dev x11proto-render-dev x11proto-xinerama-dev freeglut3-dev mesa-common-dev
        sudo pip3 install setuptools wheel
    - name: Create Build Environment For JUCE
      run: cmake -E make_directory cxxbuild
    - name: Configure JUCE
      shell: bash
      working-directory: cxxbuild
      run: cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=$BUILD_TYPE
    - name: Build JUCE
      working-directory: cxxbuild
      shell: bash
      run: cmake --build . --config $BUILD_TYPE
    - name: Clean Python Wheel
      shell: bash
      run: python3 setup.py clean --all
    - name: Build Python Wheel
      shell: bash
      run: python3 setup.py bdist_wheel

  macos_build:
    runs-on: macos-latest
    strategy:
      matrix:
        python-version: [3.6, 3.7, 3.8]
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - name: Create Build Environment For JUCE
      run: cmake -E make_directory cxxbuild
    - name: Configure JUCE
      shell: bash
      working-directory: cxxbuild
      run: cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=$BUILD_TYPE
    - name: Build JUCE
      working-directory: cxxbuild
      shell: bash
      run: cmake --build . --config $BUILD_TYPE
    - name: Clean Python Wheel
      shell: bash
      run: python3 setup.py clean --all
    - name: Build Python Wheel
      shell: bash
      run: python3 setup.py bdist_wheel

#  windows_build:
#    runs-on: windows-latest
#    steps:
#    - uses: actions/checkout@v2
#      with:
#        submodules: true
#    - name: Create Build Environment
#      run: cmake -E make_directory ${{runner.workspace}}/build
#    - name: Configure CMake
#      shell: bash
#      working-directory: ${{runner.workspace}}/build
#      run: cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=$BUILD_TYPE
#    - name: Build
#      working-directory: ${{runner.workspace}}/build
#      shell: bash
#      run: cmake --build . --config $BUILD_TYPE
#    - name: Test Lua 5.1
#      working-directory: ${{runner.workspace}}/build/Tests/Release
#      shell: bash
#      run: ./LuaBridgeTests51.exe
